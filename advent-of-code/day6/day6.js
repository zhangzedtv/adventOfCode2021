let input = `3,3,2,1,4,1,1,2,3,1,1,2,1,2,1,1,1,1,1,1,4,1,1,5,2,1,1,2,1,1,1,3,5,1,5,5,1,1,1,1,3,1,1,3,2,1,1,1,1,1,1,4,1,1,1,1,1,1,1,4,1,3,3,1,1,3,1,3,1,2,1,3,1,1,4,1,2,4,4,5,1,1,1,1,1,1,4,1,5,1,1,5,1,1,3,3,1,3,2,5,2,4,1,4,1,2,4,5,1,1,5,1,1,1,4,1,1,5,2,1,1,5,1,1,1,5,1,1,1,1,1,3,1,5,3,2,1,1,2,2,1,2,1,1,5,1,1,4,5,1,4,3,1,1,1,1,1,1,5,1,1,1,5,2,1,1,1,5,1,1,1,4,4,2,1,1,1,1,1,1,1,3,1,1,4,4,1,4,1,1,5,3,1,1,1,5,2,2,4,2,1,1,3,1,5,5,1,1,1,4,1,5,1,1,1,4,3,3,3,1,3,1,5,1,4,2,1,1,5,1,1,1,5,5,1,1,2,1,1,1,3,1,1,1,2,3,1,2,2,3,1,3,1,1,4,1,1,2,1,1,1,1,3,5,1,1,2,1,1,1,4,1,1,1,1,1,2,4,1,1,5,3,1,1,1,2,2,2,1,5,1,3,5,3,1,1,4,1,1,4`
let inputArr = input.split(',').map(el => parseInt(el))
// let  test = 26984457539;
// console.log(26984457539111111 + 222)

let count = (input, days) => {
    for(let i=0; i<days; i++){
        let len = input.length;
        for(let j=0; j<len; j++){
            if(input[j] == 0){
                input[j] = 6;
                input.push(8);
                
            } else {
                input[j]--;
            }
        }
    }
    return input.length;
}
//斐波纳切数列的变种 ，用递归电脑会奔崩溃， 用循环做
let fibonacci = (d) => {

    // if(n <= 9) {        
    //     return count(input, n)
    // }
    // return fibonacci(n-7) + fibonacci(n-9)

    let result = 0;
    let n = new Array(9);
    for(let i =1; i<10; i++){
        let input = inputArr.slice()
        n[i] = count(input, i)
    }
    for(let i=10; i<=d; i++){
        result = n[1] + n[3];
        n.shift();
        n[9] = result;                
    }
    return result;
}
console.log(fibonacci(80))
